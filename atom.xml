<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jhfuture</title>
  
  
  <link href="https://jhfuture.github.io/atom.xml" rel="self"/>
  
  <link href="https://jhfuture.github.io/"/>
  <updated>2022-07-23T05:34:37.491Z</updated>
  <id>https://jhfuture.github.io/</id>
  
  <author>
    <name>jhfuture</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>05.object方法</title>
    <link href="https://jhfuture.github.io/2022/07/23/vue/05-object%E6%96%B9%E6%B3%95/"/>
    <id>https://jhfuture.github.io/2022/07/23/vue/05-object%E6%96%B9%E6%B3%95/</id>
    <published>2022-07-23T04:46:50.000Z</published>
    <updated>2022-07-23T05:34:37.491Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p><img src="/2022/07/23/vue/05-object%E6%96%B9%E6%B3%95/example-16585544764649.jpg" alt="example"></p><p>hello world</p><p><img src="/2022/07/23/vue/05-object%E6%96%B9%E6%B3%95/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20220117113226.jpg" alt="微信图片_20220117113226"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;&lt;img src=&quot;/2022/07/23/vue/05-object%E6%96%B9%E6%B3%95/example-16585544764649.jpg&quot; alt=&quot;example&quot;&gt;&lt;/p&gt;
&lt;p&gt;hello wo</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Vue的开始</title>
    <link href="https://jhfuture.github.io/2022/07/22/vue/01.%E5%88%9D%E8%AF%86Vue/"/>
    <id>https://jhfuture.github.io/2022/07/22/vue/01.%E5%88%9D%E8%AF%86Vue/</id>
    <published>2022-07-22T15:09:14.000Z</published>
    <updated>2022-07-23T05:38:25.371Z</updated>
    
    <content type="html"><![CDATA[<p>VUe的引入</p><span id="more"></span><h1 id="Vue的开始"><a href="#Vue的开始" class="headerlink" title="Vue的开始"></a>Vue的开始</h1><h2 id="1-引入"><a href="#1-引入" class="headerlink" title="1.引入"></a>1.引入</h2><blockquote><p>vue.js是开发板的js文件，带有错误提示；vuemi.js是线上版，不会有提示</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入vuescript,引入完成后HTML中会多了一个vue的构造器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 准备一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span>=<span class="literal">false</span>;<span class="comment">//阻止vue在启动时生成提示</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建Vue实例,参数为配置对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> x=<span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 链接vue实例与HTML元素</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,<span class="comment">//element,el用于指定当前vue实例为哪个容器服务，值通常为css选择器字符串。</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// el:documenet.getElementById(&#x27;root&#x27;),这样子写也可以</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>想要Vue工作，就必须创建一个Vue实例，且要传入一个配置对象</li><li>在HTML中创建容器，并在配置对象中用<em><strong>el</strong></em>，传入</li><li>容器内的代码依旧符合HTML规范，只不过混入了一些&#x3D;&#x3D;特殊的Vue语法&#x3D;&#x3D;。</li><li>容器里的代码被称为vue模块</li><li>Vue实例与容器只能是&#x3D;&#x3D;一一对应&#x3D;&#x3D;的关系</li><li>中的xxx要写==js表达式==,且xxx可以直接读取到data中的==所有属性==。</li><li>当Vue实例中的data发生变化是，页面中用到该数据的地方也会自动刷新。</li></ol><h3 id="区分什么是-x3D-x3D-js表达式-x3D-x3D-，什么是-x3D-x3D-js代码（或者说语句）-x3D-x3D"><a href="#区分什么是-x3D-x3D-js表达式-x3D-x3D-，什么是-x3D-x3D-js代码（或者说语句）-x3D-x3D" class="headerlink" title="区分什么是&#x3D;&#x3D;js表达式&#x3D;&#x3D;，什么是&#x3D;&#x3D;js代码（或者说语句）&#x3D;&#x3D;"></a>区分什么是&#x3D;&#x3D;js表达式&#x3D;&#x3D;，什么是&#x3D;&#x3D;js代码（或者说语句）&#x3D;&#x3D;</h3><ol><li><p>表达式：一个表达式会产生一个&#x3D;&#x3D;值&#x3D;&#x3D;，可以放在任何需要值的地方。</p><p>eg:</p><pre><code>- a(在已经定义好a变量后，再使用a，就会得到它对应的值)- a+b，这明显是一个 ‘加法运算的表达式’- function(1) ——这是一个调用函数并得到其返回值的形式- x==y?a:b ——三元表达式</code></pre></li><li><p>js代码:</p><pre><code>- 控制顺序，例如 if()&#123;&#125;- for()&#123;&#125;、、</code></pre></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;VUe的引入&lt;/p&gt;</summary>
    
    
    
    <category term="Vue" scheme="https://jhfuture.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://jhfuture.github.io/tags/Vue/"/>
    
    <category term="前端" scheme="https://jhfuture.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Vue的语法</title>
    <link href="https://jhfuture.github.io/2022/07/22/vue/02.%E8%AF%AD%E6%B3%95/"/>
    <id>https://jhfuture.github.io/2022/07/22/vue/02.%E8%AF%AD%E6%B3%95/</id>
    <published>2022-07-22T15:09:14.000Z</published>
    <updated>2022-07-22T17:25:41.676Z</updated>
    
    <content type="html"><![CDATA[<p>VUe的的基本语法</p><span id="more"></span><h1 id="1-2模块语法、数据单-双-向绑定"><a href="#1-2模块语法、数据单-双-向绑定" class="headerlink" title="1.2模块语法、数据单(双)向绑定"></a>1.2模块语法、数据单(双)向绑定</h1><h2 id="一、模块语法"><a href="#一、模块语法" class="headerlink" title="一、模块语法"></a>一、模块语法</h2><blockquote><p>可分为：1.插值语法、2.指令语法</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>插值语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>指令语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>点我进入百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;school.url&quot;</span>&gt;</span>点我进入bing<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>:<span class="string">&#x27;helloworld&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">url</span>:<span class="string">&#x27;www.baidu.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">school</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">url</span>:<span class="string">&#x27;www.bing.com&#x27;</span></span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">input</span>:<span class="string">&#x27;value&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Vue模块语法有2大类：</p><ol><li><p>插值语法</p><ul><li><p>功能：用于解析&#x3D;&#x3D;标签体内容&#x3D;&#x3D;</p></li><li><p>写法：，xxx是&#x3D;&#x3D;js表达式&#x3D;&#x3D;,且可以&#x3D;&#x3D;直接读取&#x3D;&#x3D;(如果是date里面对象的值则需要使用object.propertyName访问)到data中的所有属性</p></li><li><p>备注：</p><ul><li>如果同一个变量在同一级中进行了多次赋值，则以&#x3D;&#x3D;最后一次赋值&#x3D;&#x3D;为准</li></ul></li></ul></li><li><p>指令语法</p><ul><li>功能：用于解析标签（包括标签属性、标签体内容、绑定时间……）</li><li>写法举例：<ul><li>绑定标签属性：v-bind:href&#x3D;’xxx’,或简写为 :href&#x3D;’xxx’,xxx同样要写&#x3D;&#x3D;js表达式&#x3D;&#x3D;</li></ul></li><li>备注：<ul><li><ol><li>Vue中有许多的指令，且形式都是 v-??，这里只是一个举例</li><li>v-bind是单项绑定</li></ol></li></ul></li></ul><blockquote><p>这里需要注意一下，微信小程序中的指令语法写法与插值语法相同</p><p>eg: <view width> </view></p></blockquote></li></ol><h2 id="二、双向数据绑定"><a href="#二、双向数据绑定" class="headerlink" title="二、双向数据绑定"></a>二、双向数据绑定</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;text&#x27;</span> <span class="attr">v-mode</span>=<span class="string">&#x27;name&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 普通写法 单向数据绑定 --&gt;</span></span><br><span class="line">    单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-bind:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 简写 v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值--&gt;</span></span><br><span class="line">    单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">name</span>:<span class="string">&#x27;jack&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>Vue中有2种数据绑定的方式：</p><ol><li><p>单向绑定(v-bind)：数据只能从data流向页面</p></li><li><p>双向绑定(v-model)：数据不仅能从data流向页面，还可以从&#x3D;&#x3D;页面流向data&#x3D;&#x3D;</p></li></ol><blockquote><p>1.双向绑定一般都应用在表单类元素上（如：input、select等）</p></blockquote><blockquote><p>2.v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;VUe的的基本语法&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>el与data的两种写法+vue实例</title>
    <link href="https://jhfuture.github.io/2022/07/22/vue/03.el%E4%B8%8Edata%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%86%99%E6%B3%95/"/>
    <id>https://jhfuture.github.io/2022/07/22/vue/03.el%E4%B8%8Edata%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%86%99%E6%B3%95/</id>
    <published>2022-07-22T15:09:14.000Z</published>
    <updated>2022-07-23T05:38:11.434Z</updated>
    
    <content type="html"><![CDATA[<p>el与data的两种写法+vue实例</p><span id="more"></span><h1 id="el与data的两种写法-vue实例"><a href="#el与data的两种写法-vue实例" class="headerlink" title="el与data的两种写法+vue实例"></a>el与data的两种写法+vue实例</h1><h2 id="一、-认识vue实例"><a href="#一、-认识vue实例" class="headerlink" title="一、.认识vue实例"></a>一、.认识vue实例</h2><p><img src="/2022/07/22/vue/03.el%E4%B8%8Edata%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%86%99%E6%B3%95/image-20220720233419940.png" alt="image-20220720233419940"></p><p> 1.1，以$开头的字符都是vue准备好给小程序用的</p><p>1.2 以_是vue底层在使用的</p><p><img src="/2022/07/22/vue/03.el%E4%B8%8Edata%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%86%99%E6%B3%95/image-20220720234345244.png" alt="image-20220720234345244"></p><p>1.3 使用vue原型缔造对象的方法</p><p><img src="/2022/07/22/vue/03.el%E4%B8%8Edata%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%86%99%E6%B3%95/image-20220720234416167.png" alt="image-20220720234416167"></p><h2 id="二、el的第二种写法"><a href="#二、el的第二种写法" class="headerlink" title="二、el的第二种写法"></a>二、el的第二种写法</h2><ol><li>简介</li></ol><p>​vue实例构造器里的方法</p><p>​v.#mount(‘xx’) ——xxx为<strong>css的选择器</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="comment">// el:&#x27;#root&#x27;, //第一种写法</span></span></span><br><span class="line"><span class="language-javascript">     <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">name</span>:<span class="string">&#x27;helloworld&#x27;</span></span></span><br><span class="line"><span class="language-javascript">     &#125;</span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript">     v.$mount(<span class="string">&#x27;#root&#x27;</span>) <span class="comment">//第二种写法</span></span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三、-data的两种写法"><a href="#三、-data的两种写法" class="headerlink" title="三、 data的两种写法"></a>三、 data的两种写法</h2>   <script>       new Vue({        // el:'#root', //el第一种写法        data:{//data的第一种写法        name:'helloworld'        }        v.$mount('#root') //el第二种写法        //data第二种写法,函数式              data:function(){           return{               name:'尚硅谷'           }       }       or:       data:      })        </script><p>​      </p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>el有2种写法</p><ul><li>new Vue时候配置el属性</li><li>先创建Vue实例，随后再通过使用vue原型中的mount方法，vm.$mount(‘#root’)指定el的值</li></ul><p>data有2种写法</p><ul><li><p>对象式</p></li><li><p>函数式</p><blockquote><p>如何选择：在组件中，data必须使用函数式</p></blockquote></li></ul><p>一个重要的原则：由vue管理的函数，一定不要写&#x3D;&#x3D;箭头函数&#x3D;&#x3D;，一旦写了箭头函数，this就不再是vue实例了</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;el与data的两种写法+vue实例&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://jhfuture.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue" scheme="https://jhfuture.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue中的MVVM设计模式</title>
    <link href="https://jhfuture.github.io/2022/07/22/vue/04.Vue%E4%B8%AD%E7%9A%84MVVM/"/>
    <id>https://jhfuture.github.io/2022/07/22/vue/04.Vue%E4%B8%AD%E7%9A%84MVVM/</id>
    <published>2022-07-22T15:09:14.000Z</published>
    <updated>2022-07-23T05:36:17.597Z</updated>
    
    <content type="html"><![CDATA[<p>Vue中的MVVM设计模式</p><span id="more"></span><h1 id="Mvvw"><a href="#Mvvw" class="headerlink" title="Mvvw"></a>Mvvw</h1><p><img src="/2022/07/22/vue/04.Vue%E4%B8%AD%E7%9A%84MVVM/image-20220721001442128.png" alt="image-20220721001442128"></p><p><img src="/2022/07/22/vue/04.Vue%E4%B8%AD%E7%9A%84MVVM/image-20220721001558095.png" alt="image-20220721001558095"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>M：模型(Model) ：data中的数据</li><li>V：视图(View) ：模板代码</li><li>VM：视图模型(ViewModel)：Vue实例</li></ul><h3 id="观察发现"><a href="#观察发现" class="headerlink" title="观察发现"></a>观察发现</h3><p>​MVM模型：</p><ol><li>data上的所有属性，最终都会出现在vm身上。</li><li>vm身上所有的属性，及vue原型上所有属性，在vue模块上都可以直接使用</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Vue中的MVVM设计模式&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo+github搭建个人博客</title>
    <link href="https://jhfuture.github.io/2022/07/20/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://jhfuture.github.io/2022/07/20/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-07-20T12:15:51.000Z</published>
    <updated>2022-07-23T14:34:23.111Z</updated>
    
    <content type="html"><![CDATA[<p>🎢利用hexo+github的pages功能，搭建简易版的个人博客！🐼</p><p style="color:red">来动手试试吧！</p><span id="more"></span><h1 id="用hexo-github的pages功能，搭建简易版的个人博客！"><a href="#用hexo-github的pages功能，搭建简易版的个人博客！" class="headerlink" title="用hexo+github的pages功能，搭建简易版的个人博客！"></a>用hexo+github的pages功能，搭建简易版的个人博客！</h1><p>[TOC]</p><h2 id="一、搭建准备工作"><a href="#一、搭建准备工作" class="headerlink" title="一、搭建准备工作"></a>一、搭建准备工作</h2><ol><li><p>配置安装好Node.js和Npm(NPM默认跟随Node.js安装)</p><blockquote><p>官方推荐(Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</p></blockquote></li></ol><img src="/2022/07/20/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/image-20220723202332590.png" alt="image-20220723202332590"><ol start="2"><li>配置好Git环境</li></ol><h2 id="二、搭建和hexo常用命令"><a href="#二、搭建和hexo常用命令" class="headerlink" title="二、搭建和hexo常用命令"></a>二、搭建和hexo常用命令</h2><h3 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1. 安装hexo"></a>1. 安装hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="2-初始化hexo。首先进入你想创建blog的文件夹，启动powershell"><a href="#2-初始化hexo。首先进入你想创建blog的文件夹，启动powershell" class="headerlink" title="2. 初始化hexo。首先进入你想创建blog的文件夹，启动powershell"></a>2. 初始化hexo。首先进入你想创建blog的文件夹，启动powershell</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init [folder]</span><br></pre></td></tr></table></figure><blockquote><p>folder 为你想 创建的名字，这里可以自定义，我使用blog<br>hexo init blog</p></blockquote><h3 id="3-进入初始化好的hexo。再使用npm安装配套组件。然后再进入步骤2创建的文件夹，我这里是blog文件夹，你将会看到如下的文件结构。"><a href="#3-进入初始化好的hexo。再使用npm安装配套组件。然后再进入步骤2创建的文件夹，我这里是blog文件夹，你将会看到如下的文件结构。" class="headerlink" title="3. 进入初始化好的hexo。再使用npm安装配套组件。然后再进入步骤2创建的文件夹，我这里是blog文件夹，你将会看到如下的文件结构。"></a>3. 进入初始化好的hexo。再使用npm安装配套组件。然后再进入步骤2创建的文件夹，我这里是blog文件夹，你将会看到如下的文件结构。</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">blog/文件下</span></span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这些我们后面再讲</span></span><br></pre></td></tr></table></figure><h3 id="4-开始创建你的第一个hexo博客"><a href="#4-开始创建你的第一个hexo博客" class="headerlink" title="4. 开始创建你的第一个hexo博客"></a>4. 开始创建你的第一个hexo博客</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g #编译生成静态文件 即 ——————&gt;将md文件配合其他文件生成 html+css+js文件</span><br><span class="line">hexo s # 启动本地调试</span><br></pre></td></tr></table></figure><h3 id="5-使用浏览器打开-localhost-4000"><a href="#5-使用浏览器打开-localhost-4000" class="headerlink" title="5. 使用浏览器打开 localhost:4000"></a>5. 使用浏览器打开 localhost:4000</h3><p>**Surprise  !**你的第一个hexo已经完成。</p><p><img src="/2022/07/20/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/image-20220723215707288.png" alt="image-20220723215707288"></p><h3 id="6-如果你不太喜欢官方给的主题，那让我们一起来完成主题的更换吧"><a href="#6-如果你不太喜欢官方给的主题，那让我们一起来完成主题的更换吧" class="headerlink" title="6. 如果你不太喜欢官方给的主题，那让我们一起来完成主题的更换吧"></a>6. 如果你不太喜欢官方给的主题，那让我们一起来完成主题的更换吧</h3><h4 id="a-去官方或者github-x2F-gitee-下载你喜欢的主题，并将其保存在themes文件下。"><a href="#a-去官方或者github-x2F-gitee-下载你喜欢的主题，并将其保存在themes文件下。" class="headerlink" title="a. 去官方或者github&#x2F;gitee 下载你喜欢的主题，并将其保存在themes文件下。"></a>a. 去官方或者github&#x2F;gitee 下载你喜欢的主题，并将其保存在themes文件下。</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">我这里用 next-pure主题做演示</span></span><br><span class="line">cd themes/</span><br><span class="line">git clone git@gitee.com:mirrors_cofess/hexo-theme-pure.git</span><br></pre></td></tr></table></figure><h4 id="b-修改-config-yml文件（blog文件夹下的，这里称为客户端配置文件），主题文件中也有一个，我将它称为主题配置文件"><a href="#b-修改-config-yml文件（blog文件夹下的，这里称为客户端配置文件），主题文件中也有一个，我将它称为主题配置文件" class="headerlink" title="b. 修改_config.yml文件（blog文件夹下的，这里称为客户端配置文件），主题文件中也有一个，我将它称为主题配置文件"></a>b. 修改_config.yml文件（blog文件夹下的，这里称为客户端配置文件），主题文件中也有一个，我将它称为主题配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Extensions</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Plugins: https://hexo.io/plugins/</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Themes: https://hexo.io/themes/</span></span></span><br><span class="line">theme: landscape</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这里的thems 修改为你<span class="built_in">clone</span>后的文件名</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">eg:</span></span><br><span class="line">theme: hexo-theme-pure</span><br></pre></td></tr></table></figure><blockquote><p>注意thems 与值之间有  ”空格“</p></blockquote><h4 id="c-重新执行构建文件"><a href="#c-重新执行构建文件" class="headerlink" title="c. 重新执行构建文件"></a>c. 重新执行构建文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清理一下缓存，为了更好的使用主题</span><br><span class="line">hexo generate #直接使用hexo g也可以</span><br><span class="line">hexo server #直接使用hexo s也可以</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新打开，surprise！</span></span><br></pre></td></tr></table></figure><blockquote><p>具体的美化修改可以看官方的文档。<a href="https://gitee.com/mirrors_cofess/hexo-theme-pure">点击这里进入官方文档</a></p></blockquote><h3 id="7-配置文件介绍"><a href="#7-配置文件介绍" class="headerlink" title="7. 配置文件介绍"></a>7. 配置文件介绍</h3><h4 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h4><p>网站的 <a href="https://hexo.io/zh-cn/docs/configuration">配置</a> (查看详细请点击)信息，你可以在此配置大部分的参数</p><h4 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4><p>应用程序的信息。<a href="https://ejs.co/">EJS</a>, <a href="http://learnboost.github.io/stylus/">Stylus</a> 和 <a href="http://daringfireball.net/projects/markdown/">Markdown</a> renderer 已默认安装，您可以自由移除。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package.json&#123;</span><br><span class="line">  &quot;name&quot;: &quot;hexo-site&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;0.0.0&quot;,</span><br><span class="line">  &quot;private&quot;: true,</span><br><span class="line">  &quot;hexo&quot;: &#123;</span><br><span class="line">    &quot;version&quot;: &quot;&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;hexo&quot;: &quot;^3.8.0&quot;,</span><br><span class="line">    &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;,</span><br><span class="line">    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,</span><br><span class="line">    &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;,</span><br><span class="line">    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,</span><br><span class="line">    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;,</span><br><span class="line">    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;,</span><br><span class="line">    &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;,</span><br><span class="line">    &quot;hexo-server&quot;: &quot;^0.3.3&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h4><p><a href="https://hexo.io/zh-cn/docs/writing">模版</a> 文件夹。当你新建文章时，Hexo 会根据 scaffold 来建立文件。</p><p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果你修改scaffold&#x2F;post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><blockquote><p>hexo n “blogName”</p><p>这里默认使用的模板就是post</p></blockquote><h4 id="source"><a href="#source" class="headerlink" title="source"></a>source</h4><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p><blockquote><p>我们使用 hexo n “blogName”命令生成新文档后。</p><p>md文件就储存在source&#x2F;_post&#x2F;下</p></blockquote><h3 id="8-如何配置github-x2F-gitee的部署"><a href="#8-如何配置github-x2F-gitee的部署" class="headerlink" title="8. 如何配置github&#x2F;gitee的部署"></a>8. 如何配置github&#x2F;gitee的部署</h3><ol><li>创建github&#x2F;gitee仓库，仓库名称为 [用户名称].github.io。并且要开启github pages服务</li></ol><p><img src="/2022/07/20/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/image-20220723223227122.png" alt="image-20220723223227122"></p><blockquote><p>ps:国内的gitee需要实名验证才能开启，但不晓得为什么我就是一直显示在审核中。</p></blockquote><ol start="2"><li>安装deploy插件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><pre><code> 3. 配置 _config.yml文件</code></pre><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 对应仓库地址 </span><br><span class="line">  branch: #github为main，gitee为master</span><br></pre></td></tr></table></figure><ol start="4"><li>部署到github&#x2F;gitee上</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;<strong>Congratulation ！完成啦</strong>&#x3D;&#x3D;</p><h2 id="三、解决一些小问题"><a href="#三、解决一些小问题" class="headerlink" title="三、解决一些小问题"></a>三、解决一些小问题</h2><h3 id="1-如何配置实现本地Typora和网页端都能正常显示图片？"><a href="#1-如何配置实现本地Typora和网页端都能正常显示图片？" class="headerlink" title="1. 如何配置实现本地Typora和网页端都能正常显示图片？"></a>1. 如何配置实现本地Typora和网页端都能正常显示图片？</h3><ol><li>安装<a href="https://github.com/EricGerry/hexo-asset-image-0.0.5.git">hexo-asset-image</a>,可以上传本地图片的插件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/EricGerry/hexo-asset-image-0.0.5.git --save</span><br></pre></td></tr></table></figure><blockquote><p>注意，这里必须使用&#x3D;&#x3D;<strong>0.0.5版本</strong>&#x3D;&#x3D;</p></blockquote><ol start="2"><li>配置_config.yml启用文件管理插件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在文件中使用查找功能</span></span><br><span class="line">post_asset_folder: false</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改为</span></span><br><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><ol start="3"><li>重新生成文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;test&quot;</span><br></pre></td></tr></table></figure><ol start="4"><li>然后你会发现在souce&#x2F;_post&#x2F;目录下同时出现了 <em>test.md</em>和<em>test文件夹</em>，将你需要的图片资源丢到里面即可</li><li>最后一步，配置Typora。</li></ol><p><img src="/2022/07/20/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/image-20220723222234769.png" alt="image-20220723222234769"></p><blockquote><p>这里一定要勾选 &#x3D;&#x3D;优先使用相对路径&#x3D;&#x3D;</p></blockquote><ol start="6"><li>测试一下，恭喜完成！</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;🎢利用hexo+github的pages功能，搭建简易版的个人博客！🐼&lt;/p&gt;
&lt;p style=&quot;color:red&quot;&gt;来动手试试吧！&lt;/p&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="https://jhfuture.github.io/tags/hexo/"/>
    
    <category term="个人博客" scheme="https://jhfuture.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://jhfuture.github.io/2022/07/20/vue/Untitled/"/>
    <id>https://jhfuture.github.io/2022/07/20/vue/Untitled/</id>
    <published>2022-07-20T12:14:44.364Z</published>
    <updated>2022-07-20T12:14:44.364Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
