<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://jhfuture.github.io/atom.xml" rel="self"/>
  
  <link href="https://jhfuture.github.io/"/>
  <updated>2022-07-22T17:25:45.754Z</updated>
  <id>https://jhfuture.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue的开始</title>
    <link href="https://jhfuture.github.io/2022/07/22/vue/01.%E5%88%9D%E8%AF%86Vue/"/>
    <id>https://jhfuture.github.io/2022/07/22/vue/01.%E5%88%9D%E8%AF%86Vue/</id>
    <published>2022-07-22T15:09:14.000Z</published>
    <updated>2022-07-22T17:25:45.754Z</updated>
    
    <content type="html"><![CDATA[<p>VUe的引入</p><span id="more"></span><h1 id="Vue的开始"><a href="#Vue的开始" class="headerlink" title="Vue的开始"></a>Vue的开始</h1><h2 id="1-引入"><a href="#1-引入" class="headerlink" title="1.引入"></a>1.引入</h2><blockquote><p>vue.js是开发板的js文件，带有错误提示；vuemi.js是线上版，不会有提示</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入vuescript,引入完成后HTML中会多了一个vue的构造器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 准备一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span>=<span class="literal">false</span>;<span class="comment">//阻止vue在启动时生成提示</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建Vue实例,参数为配置对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> x=<span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 链接vue实例与HTML元素</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,<span class="comment">//element,el用于指定当前vue实例为哪个容器服务，值通常为css选择器字符串。</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// el:documenet.getElementById(&#x27;root&#x27;),这样子写也可以</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>想要Vue工作，就必须创建一个Vue实例，且要传入一个配置对象</li><li>在HTML中创建容器，并在配置对象中用<em><strong>el</strong></em>，传入</li><li>容器内的代码依旧符合HTML规范，只不过混入了一些&#x3D;&#x3D;特殊的Vue语法&#x3D;&#x3D;。</li><li>容器里的代码被称为vue模块</li><li>Vue实例与容器只能是&#x3D;&#x3D;一一对应&#x3D;&#x3D;的关系</li><li>中的xxx要写==js表达式==,且xxx可以直接读取到data中的==所有属性==。</li><li>当Vue实例中的data发生变化是，页面中用到该数据的地方也会自动刷新。</li></ol><h3 id="区分什么是-x3D-x3D-js表达式-x3D-x3D-，什么是-x3D-x3D-js代码（或者说语句）-x3D-x3D"><a href="#区分什么是-x3D-x3D-js表达式-x3D-x3D-，什么是-x3D-x3D-js代码（或者说语句）-x3D-x3D" class="headerlink" title="区分什么是&#x3D;&#x3D;js表达式&#x3D;&#x3D;，什么是&#x3D;&#x3D;js代码（或者说语句）&#x3D;&#x3D;"></a>区分什么是&#x3D;&#x3D;js表达式&#x3D;&#x3D;，什么是&#x3D;&#x3D;js代码（或者说语句）&#x3D;&#x3D;</h3><ol><li><p>表达式：一个表达式会产生一个&#x3D;&#x3D;值&#x3D;&#x3D;，可以放在任何需要值的地方。</p><p>eg:</p><pre><code>- a(在已经定义好a变量后，再使用a，就会得到它对应的值)- a+b，这明显是一个 ‘加法运算的表达式’- function(1) ——这是一个调用函数并得到其返回值的形式- x==y?a:b ——三元表达式</code></pre></li><li><p>js代码:</p><pre><code>- 控制顺序，例如 if()&#123;&#125;- for()&#123;&#125;、、</code></pre></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;VUe的引入&lt;/p&gt;</summary>
    
    
    
    <category term="Vue" scheme="https://jhfuture.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://jhfuture.github.io/tags/Vue/"/>
    
    <category term="前端" scheme="https://jhfuture.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>el与data的两种写法+vue实例</title>
    <link href="https://jhfuture.github.io/2022/07/22/vue/03.el%E4%B8%8Edata%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%86%99%E6%B3%95/"/>
    <id>https://jhfuture.github.io/2022/07/22/vue/03.el%E4%B8%8Edata%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%86%99%E6%B3%95/</id>
    <published>2022-07-22T15:09:14.000Z</published>
    <updated>2022-07-22T17:26:59.784Z</updated>
    
    <content type="html"><![CDATA[<p>el与data的两种写法+vue实例</p><span id="more"></span><h1 id="el与data的两种写法-vue实例"><a href="#el与data的两种写法-vue实例" class="headerlink" title="el与data的两种写法+vue实例"></a>el与data的两种写法+vue实例</h1><h2 id="一、-认识vue实例"><a href="#一、-认识vue实例" class="headerlink" title="一、.认识vue实例"></a>一、.认识vue实例</h2><p><img src="http://rfa2kzh9o.hn-bkt.clouddn.com/img/image-20220720233419940.png" alt="image-20220720233419940"></p><p> 1.1，以$开头的字符都是vue准备好给小程序用的</p><p>1.2 以_是vue底层在使用的</p><p><img src="http://rfa2kzh9o.hn-bkt.clouddn.com/img/image-20220720234345244.png" alt="image-20220720234345244"></p><p>1.3 使用vue原型缔造对象的方法</p><p><img src="http://rfa2kzh9o.hn-bkt.clouddn.com/img/image-20220720234416167.png" alt="image-20220720234416167"></p><h2 id="二、el的第二种写法"><a href="#二、el的第二种写法" class="headerlink" title="二、el的第二种写法"></a>二、el的第二种写法</h2><ol><li>简介</li></ol><p>​vue实例构造器里的方法</p><p>​v.#mount(‘xx’) ——xxx为<strong>css的选择器</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="comment">// el:&#x27;#root&#x27;, //第一种写法</span></span></span><br><span class="line"><span class="language-javascript">     <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">name</span>:<span class="string">&#x27;helloworld&#x27;</span></span></span><br><span class="line"><span class="language-javascript">     &#125;</span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript">     v.$mount(<span class="string">&#x27;#root&#x27;</span>) <span class="comment">//第二种写法</span></span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三、-data的两种写法"><a href="#三、-data的两种写法" class="headerlink" title="三、 data的两种写法"></a>三、 data的两种写法</h2>   <script>       new Vue({        // el:'#root', //el第一种写法        data:{//data的第一种写法        name:'helloworld'        }        v.$mount('#root') //el第二种写法        //data第二种写法,函数式              data:function(){           return{               name:'尚硅谷'           }       }       or:       data:      })        </script><p>​      </p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>el有2种写法</p><ul><li>new Vue时候配置el属性</li><li>先创建Vue实例，随后再通过使用vue原型中的mount方法，vm.$mount(‘#root’)指定el的值</li></ul><p>data有2种写法</p><ul><li><p>对象式</p></li><li><p>函数式</p><blockquote><p>如何选择：在组件中，data必须使用函数式</p></blockquote></li></ul><p>一个重要的原则：由vue管理的函数，一定不要写&#x3D;&#x3D;箭头函数&#x3D;&#x3D;，一旦写了箭头函数，this就不再是vue实例了</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;el与data的两种写法+vue实例&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://jhfuture.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue" scheme="https://jhfuture.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue的语法</title>
    <link href="https://jhfuture.github.io/2022/07/22/vue/02.%E8%AF%AD%E6%B3%95/"/>
    <id>https://jhfuture.github.io/2022/07/22/vue/02.%E8%AF%AD%E6%B3%95/</id>
    <published>2022-07-22T15:09:14.000Z</published>
    <updated>2022-07-22T17:25:41.676Z</updated>
    
    <content type="html"><![CDATA[<p>VUe的的基本语法</p><span id="more"></span><h1 id="1-2模块语法、数据单-双-向绑定"><a href="#1-2模块语法、数据单-双-向绑定" class="headerlink" title="1.2模块语法、数据单(双)向绑定"></a>1.2模块语法、数据单(双)向绑定</h1><h2 id="一、模块语法"><a href="#一、模块语法" class="headerlink" title="一、模块语法"></a>一、模块语法</h2><blockquote><p>可分为：1.插值语法、2.指令语法</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>插值语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>指令语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>点我进入百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;school.url&quot;</span>&gt;</span>点我进入bing<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>:<span class="string">&#x27;helloworld&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">url</span>:<span class="string">&#x27;www.baidu.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">school</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">url</span>:<span class="string">&#x27;www.bing.com&#x27;</span></span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">input</span>:<span class="string">&#x27;value&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Vue模块语法有2大类：</p><ol><li><p>插值语法</p><ul><li><p>功能：用于解析&#x3D;&#x3D;标签体内容&#x3D;&#x3D;</p></li><li><p>写法：，xxx是&#x3D;&#x3D;js表达式&#x3D;&#x3D;,且可以&#x3D;&#x3D;直接读取&#x3D;&#x3D;(如果是date里面对象的值则需要使用object.propertyName访问)到data中的所有属性</p></li><li><p>备注：</p><ul><li>如果同一个变量在同一级中进行了多次赋值，则以&#x3D;&#x3D;最后一次赋值&#x3D;&#x3D;为准</li></ul></li></ul></li><li><p>指令语法</p><ul><li>功能：用于解析标签（包括标签属性、标签体内容、绑定时间……）</li><li>写法举例：<ul><li>绑定标签属性：v-bind:href&#x3D;’xxx’,或简写为 :href&#x3D;’xxx’,xxx同样要写&#x3D;&#x3D;js表达式&#x3D;&#x3D;</li></ul></li><li>备注：<ul><li><ol><li>Vue中有许多的指令，且形式都是 v-??，这里只是一个举例</li><li>v-bind是单项绑定</li></ol></li></ul></li></ul><blockquote><p>这里需要注意一下，微信小程序中的指令语法写法与插值语法相同</p><p>eg: <view width> </view></p></blockquote></li></ol><h2 id="二、双向数据绑定"><a href="#二、双向数据绑定" class="headerlink" title="二、双向数据绑定"></a>二、双向数据绑定</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;text&#x27;</span> <span class="attr">v-mode</span>=<span class="string">&#x27;name&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 普通写法 单向数据绑定 --&gt;</span></span><br><span class="line">    单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-bind:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 简写 v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值--&gt;</span></span><br><span class="line">    单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">name</span>:<span class="string">&#x27;jack&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>Vue中有2种数据绑定的方式：</p><ol><li><p>单向绑定(v-bind)：数据只能从data流向页面</p></li><li><p>双向绑定(v-model)：数据不仅能从data流向页面，还可以从&#x3D;&#x3D;页面流向data&#x3D;&#x3D;</p></li></ol><blockquote><p>1.双向绑定一般都应用在表单类元素上（如：input、select等）</p></blockquote><blockquote><p>2.v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;VUe的的基本语法&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Vue中的MVVM设计模式</title>
    <link href="https://jhfuture.github.io/2022/07/22/vue/04.Vue%E4%B8%AD%E7%9A%84MVVM/"/>
    <id>https://jhfuture.github.io/2022/07/22/vue/04.Vue%E4%B8%AD%E7%9A%84MVVM/</id>
    <published>2022-07-22T15:09:14.000Z</published>
    <updated>2022-07-22T17:26:13.648Z</updated>
    
    <content type="html"><![CDATA[<p>Vue中的MVVM设计模式</p><span id="more"></span><h1 id="Mvvw"><a href="#Mvvw" class="headerlink" title="Mvvw"></a>Mvvw</h1><p><img src="http://rfa2kzh9o.hn-bkt.clouddn.com/img/image-20220721001442128.png" alt="image-20220721001442128"></p><p><img src="http://rfa2kzh9o.hn-bkt.clouddn.com/img/image-20220721001558095.png" alt="image-20220721001558095"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>M：模型(Model) ：data中的数据</li><li>V：视图(View) ：模板代码</li><li>VM：视图模型(ViewModel)：Vue实例</li></ul><h3 id="观察发现"><a href="#观察发现" class="headerlink" title="观察发现"></a>观察发现</h3><p>​MVM模型：</p><ol><li>data上的所有属性，最终都会出现在vm身上。</li><li>vm身上所有的属性，及vue原型上所有属性，在vue模块上都可以直接使用</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Vue中的MVVM设计模式&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
